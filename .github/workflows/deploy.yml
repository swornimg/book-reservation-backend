name: Book Registration CI/CD

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the develop branch
  pull_request:
    types: [closed]
    branches: [develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
# env:
#   REGISTRY: "your-digitalocean-registry-container-url"
#   IMAGE_NAME: "your-docker-image-name"

#2
jobs:
  # build_and_push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repo 
  #       uses: actions/checkout@v2
        
  #     - name: Build container image
  #       run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
  #     - name: Log in to DigitalOcean Container Registry with short-lived credentials
  #       run: doctl registry login --expiry-seconds 600
      
  #     - name: Remove all old images
  #       run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

  #     - name: Push image to DigitalOcean Container Registry
  #       run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    # needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          # envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Go to directory
            - name: Go to directory
              run: cd book-reservation-backend

            # Pull from GitHub
            - name: Pull from GitHub
              run: git pull origin develop

             # Stop and remove containers, networks, and optionally, volumes
            - name: Stop and remove containers
              run: docker-compose -f docker-compose.prod.yml down
              
            # Deploy using Docker Compose
            - name: Deploy using Docker Compose
              run: docker-compose -f docker-compose.prod.yml up -d --build
